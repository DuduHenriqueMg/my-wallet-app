name: Laravel CI - Testes e Análise de Código

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
    # 1. Baixa o código do seu repositório
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configura o ambiente PHP
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2' # Use a mesma versão do seu Dockerfile
        extensions: bcmath, pdo, pdo_pgsql, zip # Adicione extensões necessárias para o composer
        ini-values: post_max_size=256M, upload_max_filesize=256M
        coverage: none

    # 3. Copia o .env para rodar os comandos artisan
    - name: Copy .env file
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    # 4. Instala as dependências do Composer
    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    # 5. Gera a chave da aplicação
    - name: Generate application key
      run: php artisan key:generate

    # 6. Verifica o estilo do código com Laravel Pint
    - name: Run Laravel Pint
      run: vendor/bin/pint --test

    # 7. Executa análise estática com Larastan/PHPStan
    - name: Run Static Analysis (PHPStan)
      run: vendor/bin/phpstan analyse

    # 8. Executa os testes (PHPUnit)
    - name: Run tests
      run: php artisan test