#!/bin/sh
set -e # Para o script se qualquer comando falhar

echo "üöÄ Iniciando deploy..."

# 1. Entra no modo de manuten√ß√£o
# (Opcional, mas bom para evitar que usu√°rios vejam erros durante o deploy)
docker compose -f compose.prod.yaml exec php-fpm php artisan down || echo "Aplica√ß√£o j√° est√° em modo de manuten√ß√£o."

# 2. Puxa as √∫ltimas altera√ß√µes do reposit√≥rio
git pull origin main

# 3. Instala depend√™ncias do Composer (se o composer.lock mudou)
# O Dockerfile j√° faz isso no build, mas pode ser uma seguran√ßa extra
# docker compose -f compose.prod.yaml run --rm composer install --no-dev --optimize-autoloader

# 4. Reconstr√≥i e reinicia os cont√™ineres
echo "üèóÔ∏è  Construindo e reiniciando os cont√™ineres..."
docker compose -f compose.prod.yaml up --build -d

# 5. Executa as migra√ß√µes do banco de dados
echo "‚öôÔ∏è  Executando migra√ß√µes..."
docker compose -f compose.prod.yaml exec php-fpm php artisan migrate --force

# 6. Limpa e otimiza a aplica√ß√£o
echo "‚ú® Otimizando a aplica√ß√£o..."
docker compose -f compose.prod.yaml exec php-fpm php artisan optimize:clear
docker compose -f compose.prod.yaml exec php-fpm php artisan optimize

# 7. Sai do modo de manuten√ß√£o
docker compose -f compose.prod.yaml exec php-fpm php artisan up

echo "‚úÖ Deploy finalizado com sucesso!"