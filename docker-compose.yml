version: '3.8'

services:
  # Serviço da Aplicação mywallet (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: mywallet_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      # Volume para persistir dados gerados pela aplicação (ex: uploads de usuários)
      - app-storage-data:/var/www/storage/app
      - ./.env:/var/www/.env 
    depends_on:
      - postgres
    networks:
      - mywallet

  # Serviço do Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: mywallet_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginx lê os arquivos do diretório do projeto no host.
      # Isso significa que o processo de deploy precisará garantir que os arquivos no host estejam atualizados.
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      # MUDE ESTAS LINHAS - usar certificados do host:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
      - ./nginx/html:/var/www/html
    depends_on:
      - app
    networks:
      - mywallet

  # Adicione este serviço para Certbot (gerenciamento de SSL)
  certbot:
    image: certbot/certbot
    container_name: mywallet_certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx
    networks:
      - mywallet

  # Serviço do Banco de Dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: mywallet_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data # Volume persistente para os dados do DB
    networks:
      - mywallet

networks:
  mywallet:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  app-storage-data: # Novo volume nomeado para persistência de dados da aplicação (ex: uploads)
    driver: local