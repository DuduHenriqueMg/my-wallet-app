# --- Estágio 1: Dependências do PHP com Composer ---
      FROM composer:2 as vendor

      WORKDIR /app
      
      COPY composer.json composer.lock ./
      RUN composer install --no-interaction --no-plugins --no-scripts --no-dev --prefer-dist --optimize-autoloader
      
      # --- Estágio 2: Compilação dos Assets com Node.js ---
      FROM node:20-alpine as node_assets
      
      WORKDIR /app
      
      # Copiar arquivos de configuração
      COPY package.json package-lock.json vite.config.js tailwind.config.js postcss.config.js ./
      COPY resources/ resources/
      
      # Copiar vendor para dependências PHP (ex: Ziggy)
      COPY --from=vendor /app/vendor/ /app/vendor/
      
      # Build dos assets
      RUN npm ci --only=production
      RUN npm run build
      
      # Verificar se build foi criado corretamente
      RUN ls -la /app/public/build/ && cat /app/public/build/manifest.json | head -5
      
      # --- Estágio 3: Imagem Final de Produção ---
      FROM php:8.2-fpm-alpine
      
      WORKDIR /var/www
      
      # Instalar dependências
      RUN apk add --no-cache \
            libpng-dev libzip-dev jpeg-dev freetype-dev postgresql-dev \
            oniguruma-dev libxml2-dev libjpeg-turbo-dev libwebp-dev \
            libpng libzip libpq libjpeg freetype supervisor \
            && docker-php-ext-configure gd --with-freetype --with-jpeg \
            && docker-php-ext-install -j$(nproc) \
            gd zip pdo pdo_pgsql exif bcmath mbstring pcntl soap xml \
            && apk del --no-cache \
            libpng-dev libzip-dev jpeg-dev freetype-dev postgresql-dev \
            oniguruma-dev libxml2-dev libjpeg-turbo-dev libwebp-dev
      
      # Copiar aplicação
      COPY --chown=www-data:www-data . /var/www
      
      # Copiar dependências
      COPY --from=vendor /app/vendor/ /var/www/vendor/
      
      # Copiar assets (IMPORTANTE: garantir que sejam copiados corretamente)
      COPY --from=node_assets /app/public/build /var/www/public/build
      
      # Ajustar permissões
      RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache /var/www/public/build \
          && chmod -R 775 /var/www/storage /var/www/bootstrap/cache \
          && chmod -R 755 /var/www/public
      
      # Verificar se assets foram copiados
      RUN ls -la /var/www/public/build/ && echo "Assets copiados com sucesso!"
      
      EXPOSE 9000
      
      CMD ["php-fpm"]