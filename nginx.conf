# Redireciona HTTP para HTTPS (bom para produção)
server {
    listen 80;
    server_name seu_dominio.com www.seu_dominio.com;

    # Bloco para o desafio do Let's Encrypt (Certbot)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuração principal do servidor
server {
    listen 443 ssl;
    server_name seu_dominio.com www.seu_dominio.com;
    root /var/www/public;
    index index.php index.html;

    # Caminhos para os certificados SSL (você vai gerar com Certbot)
    ssl_certificate /etc/letsencrypt/live/seu_dominio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/seu_dominio.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Log de acesso e erro
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Passa os scripts PHP para o FastCGI server (nosso container 'app')
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000; # 'app' é o nome do serviço no docker-compose
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Bloqueia acesso a arquivos .htaccess
    location ~ /\.ht {
        deny all;
    }
}